// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String?
  passwordHash  String
  isAdmin       Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  posts         Post[]
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  ingredients String    // Store as JSON string of array of objects with name and amount
  steps       String    // Store as JSON string of array of step objects with instruction and id
  notes       String?   // Optional cooking tips, variations, or special notes
  images      String    // Store as JSON string of array of image paths
  tags        String?   // Store as JSON string of array of strings
  category    String?   // Main category of the recipe
  cookingTime Int?      // Cooking time in minutes
  difficulty  String?   // Easy, Medium, Hard
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isPublic    Boolean   @default(false)
  cookedOn    DateTime? // When this recipe was cooked
  userId      Int       // Foreign key for User
  user        User      @relation(fields: [userId], references: [id])

  @@index([userId])
}
